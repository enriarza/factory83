/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as PianosRouteImport } from './routes/_pianos'
import { Route as PianosTransporteIndexRouteImport } from './routes/_pianos/transporte/index'
import { Route as PianosReparacionIndexRouteImport } from './routes/_pianos/reparacion/index'
import { Route as PianosNuestraEmpresaIndexRouteImport } from './routes/_pianos/nuestra-empresa/index'
import { Route as PianosGraciasPorContactarIndexRouteImport } from './routes/_pianos/gracias-por-contactar/index'
import { Route as PianosContactaIndexRouteImport } from './routes/_pianos/contacta/index'
import { Route as PianosAfinacionIndexRouteImport } from './routes/_pianos/afinacion/index'
import { Route as PianosHomeIndexRouteImport } from './routes/_pianos/_home/index'

const PianosRoute = PianosRouteImport.update({
  id: '/_pianos',
  getParentRoute: () => rootRouteImport,
} as any)
const PianosTransporteIndexRoute = PianosTransporteIndexRouteImport.update({
  id: '/transporte/',
  path: '/transporte/',
  getParentRoute: () => PianosRoute,
} as any)
const PianosReparacionIndexRoute = PianosReparacionIndexRouteImport.update({
  id: '/reparacion/',
  path: '/reparacion/',
  getParentRoute: () => PianosRoute,
} as any)
const PianosNuestraEmpresaIndexRoute =
  PianosNuestraEmpresaIndexRouteImport.update({
    id: '/nuestra-empresa/',
    path: '/nuestra-empresa/',
    getParentRoute: () => PianosRoute,
  } as any)
const PianosGraciasPorContactarIndexRoute =
  PianosGraciasPorContactarIndexRouteImport.update({
    id: '/gracias-por-contactar/',
    path: '/gracias-por-contactar/',
    getParentRoute: () => PianosRoute,
  } as any)
const PianosContactaIndexRoute = PianosContactaIndexRouteImport.update({
  id: '/contacta/',
  path: '/contacta/',
  getParentRoute: () => PianosRoute,
} as any)
const PianosAfinacionIndexRoute = PianosAfinacionIndexRouteImport.update({
  id: '/afinacion/',
  path: '/afinacion/',
  getParentRoute: () => PianosRoute,
} as any)
const PianosHomeIndexRoute = PianosHomeIndexRouteImport.update({
  id: '/_home/',
  path: '/',
  getParentRoute: () => PianosRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof PianosHomeIndexRoute
  '/afinacion': typeof PianosAfinacionIndexRoute
  '/contacta': typeof PianosContactaIndexRoute
  '/gracias-por-contactar': typeof PianosGraciasPorContactarIndexRoute
  '/nuestra-empresa': typeof PianosNuestraEmpresaIndexRoute
  '/reparacion': typeof PianosReparacionIndexRoute
  '/transporte': typeof PianosTransporteIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof PianosHomeIndexRoute
  '/afinacion': typeof PianosAfinacionIndexRoute
  '/contacta': typeof PianosContactaIndexRoute
  '/gracias-por-contactar': typeof PianosGraciasPorContactarIndexRoute
  '/nuestra-empresa': typeof PianosNuestraEmpresaIndexRoute
  '/reparacion': typeof PianosReparacionIndexRoute
  '/transporte': typeof PianosTransporteIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_pianos': typeof PianosRouteWithChildren
  '/_pianos/_home/': typeof PianosHomeIndexRoute
  '/_pianos/afinacion/': typeof PianosAfinacionIndexRoute
  '/_pianos/contacta/': typeof PianosContactaIndexRoute
  '/_pianos/gracias-por-contactar/': typeof PianosGraciasPorContactarIndexRoute
  '/_pianos/nuestra-empresa/': typeof PianosNuestraEmpresaIndexRoute
  '/_pianos/reparacion/': typeof PianosReparacionIndexRoute
  '/_pianos/transporte/': typeof PianosTransporteIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/afinacion'
    | '/contacta'
    | '/gracias-por-contactar'
    | '/nuestra-empresa'
    | '/reparacion'
    | '/transporte'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/afinacion'
    | '/contacta'
    | '/gracias-por-contactar'
    | '/nuestra-empresa'
    | '/reparacion'
    | '/transporte'
  id:
    | '__root__'
    | '/_pianos'
    | '/_pianos/_home/'
    | '/_pianos/afinacion/'
    | '/_pianos/contacta/'
    | '/_pianos/gracias-por-contactar/'
    | '/_pianos/nuestra-empresa/'
    | '/_pianos/reparacion/'
    | '/_pianos/transporte/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  PianosRoute: typeof PianosRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_pianos': {
      id: '/_pianos'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PianosRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_pianos/transporte/': {
      id: '/_pianos/transporte/'
      path: '/transporte'
      fullPath: '/transporte'
      preLoaderRoute: typeof PianosTransporteIndexRouteImport
      parentRoute: typeof PianosRoute
    }
    '/_pianos/reparacion/': {
      id: '/_pianos/reparacion/'
      path: '/reparacion'
      fullPath: '/reparacion'
      preLoaderRoute: typeof PianosReparacionIndexRouteImport
      parentRoute: typeof PianosRoute
    }
    '/_pianos/nuestra-empresa/': {
      id: '/_pianos/nuestra-empresa/'
      path: '/nuestra-empresa'
      fullPath: '/nuestra-empresa'
      preLoaderRoute: typeof PianosNuestraEmpresaIndexRouteImport
      parentRoute: typeof PianosRoute
    }
    '/_pianos/gracias-por-contactar/': {
      id: '/_pianos/gracias-por-contactar/'
      path: '/gracias-por-contactar'
      fullPath: '/gracias-por-contactar'
      preLoaderRoute: typeof PianosGraciasPorContactarIndexRouteImport
      parentRoute: typeof PianosRoute
    }
    '/_pianos/contacta/': {
      id: '/_pianos/contacta/'
      path: '/contacta'
      fullPath: '/contacta'
      preLoaderRoute: typeof PianosContactaIndexRouteImport
      parentRoute: typeof PianosRoute
    }
    '/_pianos/afinacion/': {
      id: '/_pianos/afinacion/'
      path: '/afinacion'
      fullPath: '/afinacion'
      preLoaderRoute: typeof PianosAfinacionIndexRouteImport
      parentRoute: typeof PianosRoute
    }
    '/_pianos/_home/': {
      id: '/_pianos/_home/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PianosHomeIndexRouteImport
      parentRoute: typeof PianosRoute
    }
  }
}

interface PianosRouteChildren {
  PianosHomeIndexRoute: typeof PianosHomeIndexRoute
  PianosAfinacionIndexRoute: typeof PianosAfinacionIndexRoute
  PianosContactaIndexRoute: typeof PianosContactaIndexRoute
  PianosGraciasPorContactarIndexRoute: typeof PianosGraciasPorContactarIndexRoute
  PianosNuestraEmpresaIndexRoute: typeof PianosNuestraEmpresaIndexRoute
  PianosReparacionIndexRoute: typeof PianosReparacionIndexRoute
  PianosTransporteIndexRoute: typeof PianosTransporteIndexRoute
}

const PianosRouteChildren: PianosRouteChildren = {
  PianosHomeIndexRoute: PianosHomeIndexRoute,
  PianosAfinacionIndexRoute: PianosAfinacionIndexRoute,
  PianosContactaIndexRoute: PianosContactaIndexRoute,
  PianosGraciasPorContactarIndexRoute: PianosGraciasPorContactarIndexRoute,
  PianosNuestraEmpresaIndexRoute: PianosNuestraEmpresaIndexRoute,
  PianosReparacionIndexRoute: PianosReparacionIndexRoute,
  PianosTransporteIndexRoute: PianosTransporteIndexRoute,
}

const PianosRouteWithChildren =
  PianosRoute._addFileChildren(PianosRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  PianosRoute: PianosRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
